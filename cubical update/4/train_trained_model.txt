import numpy as np
from tensorflow.keras.models import load_model

# Load the train and validation data
x_train = np.load("x_train.npy")
y_train = np.load("y_train.npy")
x_val = np.load("x_val.npy")
y_val = np.load("y_val.npy")

# Load the pre-trained model
model = load_model("pre_trained_model.h5")

# Freeze the pre-trained weights
for layer in model.layers:
    layer.trainable = False

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
history = model.fit(x_train, y_train, epochs=5, batch_size=32, validation_data=(x_val, y_val))

# Unfreeze some layers
for layer in model.layers[:10]:
    layer.trainable = True

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
history = model.fit(x_train, y_train, epochs=5, batch_size=32, validation_data=(x_val, y_val))

# Save the fine-tuned model
model.save("fine_tuned_model.h5")
